const cron = require('node-cron');
const mongoose = require('mongoose');
const Startup = require('./models/Startup');
const StartupUser = require('./models/StartupUser');
const { sendMail } = require('./services/emailService');
require('dotenv').config();

async function archiveOldStartups() {
  try {
    const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
    const startups = await Startup.find({
      $or: [
        { pitchDeckUrl: { $exists: false } },
        { pitchDeckUrl: '' },
        { pitchDeckUrl: null }
      ],
      createdAt: { $lte: weekAgo },
      status: { $ne: 'archived' }
    });
    
    for (const startup of startups) {
      startup.status = 'archived';
      await startup.save();
      
      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å email)
      if (startup.startupUserId) {
        const user = await StartupUser.findById(startup.startupUserId);
        if (user && user.email) {
          try {
            await sendMail(user.email, '–í–∞—à —Å—Ç–∞—Ä—Ç–∞–ø –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ –∞—Ä—Ö–∏–≤',
              `<p>–í–∞—à —Å—Ç–∞—Ä—Ç–∞–ø <b>${startup.name}</b> –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ –∞—Ä—Ö–∏–≤, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏ pitch deck –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.</p>
              <p>–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç–µ pitch deck –∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.</p>`
            );
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
          }
        }
      }
      console.log(`–°—Ç–∞—Ä—Ç–∞–ø ${startup.name} (${startup._id}) –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω.`);
    }
    
    console.log(`–ê—Ä—Ö–∏–≤–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${startups.length} —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤.`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ cron-–∑–∞–¥–∞—á–∏
const startArchiveCron = () => {
  console.log('‚è∞ Setting up startup archive cron job (daily at 2:00 AM)...');
  
  cron.schedule('0 2 * * *', () => {
    console.log('üîÑ Starting scheduled startup archive...');
    archiveOldStartups();
  }, {
    scheduled: true,
    timezone: "Asia/Almaty"
  });
  
  console.log('‚úÖ Startup archive cron job scheduled successfully');
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
module.exports = {
  startArchiveCron,
  archiveOldStartups
}; 