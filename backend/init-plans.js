const mongoose = require('mongoose');
const Plan = require('./src/models/Plan');
require('dotenv').config();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose.connect(process.env.MONGODB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const plans = [
  // –ü–ª–∞–Ω—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
  {
    id: 'investor_free',
    name: 'Free',
    userType: 'investor',
    price: { monthly: 0, yearly: 0 },
    limits: {
      project_views_per_day: 2,
      startup_contacts_visible: false,
      can_export: false,
      can_submit_interest: true,
      access_private_deals: false
    },
    features: [
      '2 –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –¥–µ–Ω—å',
      '–ë–∞–∑–æ–≤—ã–π –ø–æ–∏—Å–∫ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤',
      '–î–æ—Å—Ç—É–ø –∫ –Ω–æ–≤–æ—Å—Ç—è–º',
      '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É'
    ]
  },
  {
    id: 'investor_pro',
    name: 'Pro',
    userType: 'investor',
    price: { monthly: 19, yearly: 190 },
    limits: {
      project_views_per_day: -1,
      startup_contacts_visible: true,
      can_export: true,
      can_submit_interest: true,
      access_private_deals: false
    },
    features: [
      '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤',
      '–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤',
      '–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ Excel',
      '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
      '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö'
    ]
  },
  {
    id: 'investor_partner_plus',
    name: 'Partner+',
    userType: 'investor',
    price: { monthly: 49, yearly: 490 },
    limits: {
      project_views_per_day: -1,
      startup_contacts_visible: true,
      can_export: true,
      can_submit_interest: true,
      access_private_deals: true
    },
    features: [
      '–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ Pro',
      '–î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Å–¥–µ–ª–∫–∞–º',
      '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
      'API –¥–æ—Å—Ç—É–ø',
      '–ö–∞—Å—Ç–æ–º–Ω—ã–µ –æ—Ç—á–µ—Ç—ã',
      '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ',
      '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'
    ]
  },
  // –ü–ª–∞–Ω—ã –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ)
  {
    id: 'startup_free',
    name: 'Free',
    userType: 'startup',
    price: { monthly: 0, yearly: 0 },
    limits: {
      project_views_per_day: 5,
      startup_contacts_visible: false,
      can_export: false,
      can_submit_interest: true,
      access_private_deals: false
    },
    features: [
      '–ë–∞–∑–æ–≤–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞',
      '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (5 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤/–¥–µ–Ω—å)',
      '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      '1 –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –≤ –º–µ—Å—è—Ü'
    ]
  },
  {
    id: 'startup_starter',
    name: 'Starter',
    userType: 'startup',
    price: { monthly: 15, yearly: 150 },
    limits: {
      project_views_per_day: 50,
      startup_contacts_visible: true,
      can_export: false,
      can_submit_interest: true,
      access_private_deals: false
    },
    features: [
      '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–µ',
      '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (50 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤/–¥–µ–Ω—å)',
      '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞',
      '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏',
      '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è',
      '–°–∫–∏–¥–∫–∞ 50% –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –¥–æ 1 –≥–æ–¥–∞'
    ],
    discounts: {
      startup_age_months: 12,
      discount_percent: 50
    }
  },
  {
    id: 'startup_premium',
    name: 'Premium',
    userType: 'startup',
    price: { monthly: 29, yearly: 290 },
    limits: {
      project_views_per_day: -1,
      startup_contacts_visible: true,
      can_export: true,
      can_submit_interest: true,
      access_private_deals: false
    },
    features: [
      '–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ Starter',
      '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
      '–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ Excel',
      'API –¥–æ—Å—Ç—É–ø',
      '–ö–∞—Å—Ç–æ–º–Ω—ã–µ –æ—Ç—á–µ—Ç—ã',
      '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM',
      '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞—Ö',
      '–°–∫–∏–¥–∫–∞ 30% –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –¥–æ 2 –ª–µ—Ç'
    ],
    discounts: {
      startup_age_months: 24,
      discount_percent: 30
    }
  },
  {
    id: 'startup_enterprise',
    name: 'Enterprise',
    userType: 'startup',
    price: { monthly: 99, yearly: 990 },
    limits: {
      project_views_per_day: -1,
      startup_contacts_visible: true,
      can_export: true,
      can_submit_interest: true,
      access_private_deals: true
    },
    features: [
      '–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ Premium',
      '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
      '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
      '–ü—Ä—è–º—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º–∏',
      '–ë–µ–ª—ã–π –ª–µ–π–±–ª',
      '–ö–∞—Å—Ç–æ–º–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
      '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7',
      '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤'
    ]
  }
];

async function initializePlans() {
  try {
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–æ–≤ –ø–æ–¥–ø–∏—Å–æ–∫...');
    
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–ª–∞–Ω—ã
    await Plan.deleteMany({});
    console.log('‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–ª–∞–Ω—ã —É–¥–∞–ª–µ–Ω—ã');
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø–ª–∞–Ω—ã
    const createdPlans = await Plan.insertMany(plans);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${createdPlans.length} –ø–ª–∞–Ω–æ–≤:`);
    
    createdPlans.forEach(plan => {
      console.log(`  - ${plan.name} (${plan.userType}): $${plan.price.monthly}/–º–µ—Å—è—Ü`);
    });
    
    console.log('\nüéâ –ü–ª–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!');
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`  –ò–Ω–≤–µ—Å—Ç–æ—Ä—ã: ${createdPlans.filter(p => p.userType === 'investor').length} –ø–ª–∞–Ω–æ–≤`);
    console.log(`  –°—Ç–∞—Ä—Ç–∞–ø—ã: ${createdPlans.filter(p => p.userType === 'startup').length} –ø–ª–∞–Ω–æ–≤`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–Ω–æ–≤:', error);
  } finally {
    mongoose.connection.close();
  }
}

initializePlans(); 