const mongoose = require('mongoose');
const News = require('./src/models/News');
require('dotenv').config();

async function verifyNewsImages() {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalNews = await News.countDocuments();
    const pendingNews = await News.countDocuments({ status: 'pending' });
    const approvedNews = await News.countDocuments({ status: 'approved' });
    
    console.log('\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π:');
    console.log(`–í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π: ${totalNews}`);
    console.log(`–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: ${pendingNews}`);
    console.log(`–û–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö: ${approvedNews}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const imageCounts = await News.aggregate([
      { $group: { _id: '$image.url', count: { $sum: 1 }, articles: { $push: '$title.translated' } } },
      { $match: { count: { $gt: 1 } } },
      { $sort: { count: -1 } }
    ]);
    
    if (imageCounts.length > 0) {
      console.log('\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
      imageCounts.forEach(item => {
        console.log(`${item._id}: ${item.count} —Ä–∞–∑`);
        item.articles.forEach((title, index) => {
          console.log(`  ${index + 1}. ${title.substring(0, 50)}...`);
        });
      });
    } else {
      console.log('\n‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã.');
    }
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const categoryStats = await News.aggregate([
      { $group: { _id: '$category', count: { $sum: 1 } } },
      { $sort: { count: -1 } }
    ]);
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
    categoryStats.forEach(stat => {
      console.log(`${stat._id}: ${stat.count} –Ω–æ–≤–æ—Å—Ç–µ–π`);
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π —Å –∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    const sampleNews = await News.find().limit(5).sort({ createdAt: -1 });
    
    console.log('\nüì∞ –ü—Ä–∏–º–µ—Ä—ã –Ω–æ–≤–æ—Å—Ç–µ–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:');
    sampleNews.forEach((news, index) => {
      console.log(`${index + 1}. ${news.title.translated.substring(0, 40)}...`);
      console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${news.category}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${news.status}`);
      console.log(`   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${news.image.url}`);
      console.log('');
    });
    
    console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await mongoose.disconnect();
    console.log('üì° –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
  }
}

verifyNewsImages(); 