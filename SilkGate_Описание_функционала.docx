SilkGate — описание реализованного функционала

1. Аутентификация и роли
- Поддержка трёх ролей: инвестор, стартапер, админ.
- Универсальная форма входа с выбором типа пользователя (инвестор/стартапер).
- Для каждой роли — отдельный endpoint, хранение токена, редирект на нужный дашборд.
- Восстановление пароля для обеих ролей: отправка письма, сброс по токену, защита от ошибок.
- Админ-логин через данные из .env.

2. Регистрация
- Инвестор: форма с NDA, email, интересами, регистрация с email-верификацией.
- Стартапер: форма с email, паролем, регистрация стартапа (pitch deck не обязателен).

3. Дашборды
- Инвестор: просмотр проектов (реализация зависит от требований).
- Стартапер: создание, редактирование, просмотр своих стартапов.
- Для каждого стартапа отображается статус (pending, approved, rejected, archived).

4. Автоматическая архивация стартапов
- Если pitch deck не загружен в течение 7 дней после регистрации — стартап автоматически получает статус archived.
- Пользователь получает email-уведомление о переводе в архив.
- Реализовано отдельным скриптом (cronArchiveStartups.js), который можно запускать по расписанию.

5. Визуализация таймера до архивации
- В Dashboard стартапера для каждого стартапа без pitch deck и не в архиве отображается блок:
  ⚠️ До автоматического переноса стартапа в архив осталось: X дн. Y ч.
  Загрузите pitch deck, чтобы ваш проект остался активным.
- Блок выделен цветом, с иконкой и пояснением.

6. UI/UX
- Кнопка "Выйти" убрана с форм регистрации и восстановления пароля.
- Для админа после выхода — редирект на главную страницу.
- Все действия пользователя сопровождаются понятными сообщениями об ошибках и успехе.

7. Безопасность
- Все чувствительные данные (email, пароли, токены) не хранятся в коде.
- Защита от несанкционированного доступа к дашбордам и API.

8. Архитектура
- Backend: Node.js, Express, MongoDB, nodemailer.
- Frontend: React, TailwindCSS, React Router.
- Чистая структура кода, разделение по ролям и сущностям.

9. Готовность к развитию
- Сначала реализовано всё наполнение и бизнес-логика.
- Дизайн и UI-улучшения можно внедрять после наполнения.
- Код легко расширять: добавлять новые роли, фичи, интеграции.

---

Документ подготовлен для передачи другому разработчику или ИИ. При необходимости могу дополнить деталями по API, структуре БД, сценариям использования. 