import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';

const Notifications = () => {
  const [notifications, setNotifications] = useState([]);
  const [filter, setFilter] = useState('all');
  const [showRead, setShowRead] = useState(true);

  // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫)
  const demoNotifications = [
    {
      id: 1,
      type: 'startup',
      title: '–ù–æ–≤—ã–π —Å—Ç–∞—Ä—Ç–∞–ø "–≠–∫–æ–¢–µ—Ö"',
      message: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏—Ö —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç!',
      time: '2 –º–∏–Ω—É—Ç—ã –Ω–∞–∑–∞–¥',
      isRead: false,
      icon: 'üå±',
      color: 'green',
      link: '/chat-demo'
    },
    {
      id: 2,
      type: 'analytics',
      title: '–†–æ—Å—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è',
      message: '–í–∞—à –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –≤—ã—Ä–æ—Å –Ω–∞ 15% –∑–∞ –º–µ—Å—è—Ü. –û—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!',
      time: '1 —á–∞—Å –Ω–∞–∑–∞–¥',
      isRead: false,
      icon: 'üìà',
      color: 'blue',
      link: '/investor-dashboard'
    },
    {
      id: 3,
      type: 'message',
      title: '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
      message: '–°—Ç–∞—Ä—Ç–∞–ø "AI Assistant" –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–µ–π –ø—Ä–æ–µ–∫—Ç–∞.',
      time: '3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
      isRead: true,
      icon: 'üí¨',
      color: 'purple',
      link: '/chat-demo'
    },
    {
      id: 4,
      type: 'deal',
      title: '–°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω',
      message: '–°–¥–µ–ª–∫–∞ —Å "FinTech Pro" –ø–µ—Ä–µ—à–ª–∞ –Ω–∞ —ç—Ç–∞–ø –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–∞—à–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.',
      time: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥',
      isRead: true,
      icon: 'üí∞',
      color: 'yellow',
      link: '/investor-dashboard'
    },
    {
      id: 5,
      type: 'recommendation',
      title: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è',
      message: '–ü—Ä–æ–µ–∫—Ç "HealthTech" —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–∏–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å.',
      time: '2 –¥–Ω—è –Ω–∞–∑–∞–¥',
      isRead: true,
      icon: 'üéØ',
      color: 'red',
      link: '/investor-dashboard'
    },
    {
      id: 6,
      type: 'startup',
      title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ "SmartHome"',
      message: '–°—Ç–∞—Ä—Ç–∞–ø –æ–±–Ω–æ–≤–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–º –ø—Ä–æ–µ–∫—Ç–µ. –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.',
      time: '3 –¥–Ω—è –Ω–∞–∑–∞–¥',
      isRead: true,
      icon: 'üè†',
      color: 'green',
      link: '/investor-dashboard'
    },
    {
      id: 7,
      type: 'analytics',
      title: '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç',
      message: '–í–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ–∫–∞–∑–∞–ª —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç. –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.',
      time: '1 –Ω–µ–¥–µ–ª—è –Ω–∞–∑–∞–¥',
      isRead: true,
      icon: 'üìä',
      color: 'blue',
      link: '/investor-dashboard'
    },
    {
      id: 8,
      type: 'deal',
      title: '–ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞',
      message: '–°—Ç–∞—Ä—Ç–∞–ø "EduTech" –ø—Ä–µ–¥–ª–æ–∂–∏–ª –Ω–æ–≤—É—é —Å–¥–µ–ª–∫—É. –°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: $50,000.',
      time: '1 –Ω–µ–¥–µ–ª—è –Ω–∞–∑–∞–¥',
      isRead: true,
      icon: 'üéì',
      color: 'yellow',
      link: '/investor-dashboard'
    }
  ];

  useEffect(() => {
    setNotifications(demoNotifications);
  }, []);

  const filteredNotifications = notifications.filter(notification => {
    if (filter === 'all') return showRead || !notification.isRead;
    if (filter === 'unread') return !notification.isRead;
    return notification.type === filter && (showRead || !notification.isRead);
  });

  const markAsRead = (notificationId) => {
    setNotifications(prev => 
      prev.map(notification => 
        notification.id === notificationId 
          ? { ...notification, isRead: true }
          : notification
      )
    );
  };

  const markAllAsRead = () => {
    setNotifications(prev => 
      prev.map(notification => ({ ...notification, isRead: true }))
    );
  };

  const getNotificationColor = (color) => {
    const colors = {
      green: 'bg-green-100 text-green-800 border-green-200',
      blue: 'bg-blue-100 text-blue-800 border-blue-200',
      purple: 'bg-purple-100 text-purple-800 border-purple-200',
      yellow: 'bg-yellow-100 text-yellow-800 border-yellow-200',
      red: 'bg-red-100 text-red-800 border-red-200'
    };
    return colors[color] || colors.blue;
  };

  const getTypeLabel = (type) => {
    const labels = {
      startup: '–°—Ç–∞—Ä—Ç–∞–ø',
      analytics: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
      message: '–°–æ–æ–±—â–µ–Ω–∏–µ',
      deal: '–°–¥–µ–ª–∫–∞',
      recommendation: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è'
    };
    return labels[type] || type;
  };

  const unreadCount = notifications.filter(n => !n.isRead).length;

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <Link to="/" className="flex items-center space-x-2">
                <img src="/logo-icon-new.png" alt="SilkGate" className="w-8 h-8" />
                <span className="text-[#FFD700] font-bold text-xl">SilkGate</span>
              </Link>
              <div className="h-6 w-px bg-gray-300"></div>
              <h1 className="text-2xl font-bold text-gray-900">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h1>
            </div>
            <div className="flex items-center space-x-3">
              <span className="px-3 py-1 bg-yellow-100 text-yellow-800 text-sm rounded-full font-medium">
                –î–µ–º–æ —Ä–µ–∂–∏–º
              </span>
              <Link
                to="/investor-dashboard"
                className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
              >
                ‚Üê –ù–∞–∑–∞–¥ –∫ –¥–∞—à–±–æ—Ä–¥—É
              </Link>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –§–∏–ª—å—Ç—Ä—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6">
          <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0">
            <div className="flex items-center space-x-4">
              <h2 className="text-lg font-semibold text-gray-900">–§–∏–ª—å—Ç—Ä—ã</h2>
              
              {/* –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É */}
              <select
                value={filter}
                onChange={(e) => setFilter(e.target.value)}
                className="px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="all">–í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</option>
                <option value="unread">–ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ</option>
                <option value="startup">–°—Ç–∞—Ä—Ç–∞–ø—ã</option>
                <option value="analytics">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</option>
                <option value="message">–°–æ–æ–±—â–µ–Ω–∏—è</option>
                <option value="deal">–°–¥–µ–ª–∫–∏</option>
                <option value="recommendation">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</option>
              </select>

              {/* –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ */}
              <label className="flex items-center space-x-2">
                <input
                  type="checkbox"
                  checked={showRead}
                  onChange={(e) => setShowRead(e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                />
                <span className="text-sm text-gray-700">–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ</span>
              </label>
            </div>

            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –¥–µ–π—Å—Ç–≤–∏—è */}
            <div className="flex items-center space-x-4">
              <div className="text-sm text-gray-600">
                <span className="font-semibold">{filteredNotifications.length}</span> –∏–∑ {notifications.length} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                {unreadCount > 0 && (
                  <span className="ml-2 text-blue-600">
                    ({unreadCount} –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö)
                  </span>
                )}
              </div>
              
              {unreadCount > 0 && (
                <button
                  onClick={markAllAsRead}
                  className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm"
                >
                  –û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ
                </button>
              )}
            </div>
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
        <div className="space-y-4">
          {filteredNotifications.length > 0 ? (
            filteredNotifications.map((notification) => (
              <div
                key={notification.id}
                className={`bg-white rounded-xl shadow-sm border border-gray-200 p-6 transition-all hover:shadow-md ${
                  !notification.isRead ? 'ring-2 ring-blue-200 bg-blue-50' : ''
                }`}
              >
                <div className="flex items-start space-x-4">
                  {/* –ò–∫–æ–Ω–∫–∞ */}
                  <div className={`w-12 h-12 rounded-full flex items-center justify-center text-2xl ${getNotificationColor(notification.color)}`}>
                    {notification.icon}
                  </div>
                  
                  {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
                  <div className="flex-1 min-w-0">
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <div className="flex items-center space-x-3 mb-2">
                          <h3 className="text-lg font-semibold text-gray-900">
                            {notification.title}
                          </h3>
                          {!notification.isRead && (
                            <span className="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full font-medium">
                              –ù–æ–≤–æ–µ
                            </span>
                          )}
                        </div>
                        <p className="text-gray-600 leading-relaxed mb-3">
                          {notification.message}
                        </p>
                        <div className="flex items-center justify-between">
                          <span className="text-sm text-gray-400">
                            {notification.time}
                          </span>
                          <div className="flex items-center space-x-3">
                            <span className={`px-3 py-1 rounded-full text-sm font-medium ${getNotificationColor(notification.color)}`}>
                              {getTypeLabel(notification.type)}
                            </span>
                            {!notification.isRead && (
                              <button
                                onClick={() => markAsRead(notification.id)}
                                className="text-sm text-blue-600 hover:text-blue-800 font-medium"
                              >
                                –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
                              </button>
                            )}
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))
          ) : (
            <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center">
              <div className="w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
                <svg className="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 17h5l-5 5v-5zM10.5 3.75a6 6 0 0 1 6 6v3.75l2.25 2.25V12a8.25 8.25 0 0 0-16.5 0v3.75L4.5 15.75V9.75a6 6 0 0 1 6-6z" />
                </svg>
              </div>
              <h3 className="text-lg font-medium text-gray-900 mb-2">–ù–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
              <p className="text-gray-500 mb-4">
                {filter === 'all' 
                  ? '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π' 
                  : `–ù–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ —Ñ–∏–ª—å—Ç—Ä—É "${getTypeLabel(filter)}"`
                }
              </p>
              <button
                onClick={() => {
                  setFilter('all');
                  setShowRead(true);
                }}
                className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
              >
                –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
              </button>
            </div>
          )}
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ */}
        <div className="mt-8 bg-yellow-50 border border-yellow-200 rounded-xl p-4">
          <div className="flex items-start space-x-3">
            <div className="w-6 h-6 bg-yellow-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
              <svg className="w-4 h-4 text-yellow-600" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
              </svg>
            </div>
            <div>
              <h4 className="text-sm font-medium text-yellow-800 mb-1">–î–µ–º–æ-—Ä–µ–∂–∏–º</h4>
              <p className="text-sm text-yellow-700">
                –≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –í —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ 
                –ø—Ä–∏ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Notifications; 